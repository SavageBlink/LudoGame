@startuml

title __COMPANY's Class Diagram__\n

  namespace com.company {
    class com.company.Board {
        {static} - blueHomeTiles : ArrayList<Tile>
        {static} - greenHomeTiles : ArrayList<Tile>
        {static} - players : ArrayList<Player>
        {static} - redHomeTiles : ArrayList<Tile>
        {static} - tiles : ArrayList<Tile>
        {static} - yellowHomeTiles : ArrayList<Tile>
        + Board()
        + Board()
        {static} + freePath()
        + gameLoop()
        + getD()
        {static} + getHomeTiles()
        + getPlayer()
        + getPlayers()
        + getTiles()
        + moveHorse()
        + setD()
        + translateBlock()
        + translateHorse()
        + turn()
        {static} - generateHomeTiles()
        {static} - generatePlayers()
        {static} - generateTiles()
    }
  }
  

  namespace com.company {
    class com.company.Bot {
        {static} + botPlay()
    }
  }
  

  namespace com.company {
    enum Color {
      BLUE
      GREEN
      RED
      YELLOW
    }
  }
  

  namespace com.company {
    class com.company.Dice {
        - nbFaces : int
        + Dice()
        + Dice()
        + getNbFaces()
        + roll()
        + setNbFaces()
    }
  }
  

  namespace com.company {
    class com.company.Horse {
        - absolutePosition : int
        - id : int
        - relativePosition : int
        + Horse()
        + addStep()
        + getAbsolutePosition()
        + getColor()
        + getId()
        + getRelativePosition()
        + setAbsolutePosition()
        + setColor()
        + setRelativePosition()
        + toString()
    }
  }
  

  namespace com.company {
    class com.company.Main {
        {static} + main()
    }
  }
  

  namespace com.company {
    class com.company.Player {
        - Lhorse : ArrayList<Horse>
        - finished : boolean
        - startingTile : int
        + Player()
        + getColor()
        + getLhorse()
        + getPlayableHorses()
        + getStartingTile()
        {static} + identifyStartingTile()
        + isFinished()
        + moveHorse()
        + setColor()
        + toString()
    }
  }
  

  namespace com.company {
    class com.company.Tile {
        - content : ArrayList<Horse>
        - safe : boolean
        + Tile()
        + addHorse()
        + clearContent()
        + getContent()
        + getNumberOfHorseOfColor()
        + getSize()
        + isSafe()
        + isThereBlock()
        + setSafe()
        + toString()
        + yeetHorse()
    }
  }
  

  com.company.Board o-- com.company.Dice : d
  com.company.Horse o-- com.company.Color : color
  com.company.Player o-- com.company.Color : color


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
